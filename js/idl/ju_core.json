{
  "version": "0.1.0",
  "name": "ju_core",
  "constants": [
    {
      "name": "MIN_PROCESSORNAME_LENGTH",
      "type": {
        "defined": "usize"
      },
      "value": "5"
    },
    {
      "name": "MAX_PROCESSORNAME_LENGTH",
      "type": {
        "defined": "usize"
      },
      "value": "200"
    },
    {
      "name": "MIN_APPNAME_LENGTH",
      "type": {
        "defined": "usize"
      },
      "value": "3"
    },
    {
      "name": "MAX_APPNAME_LENGTH",
      "type": {
        "defined": "usize"
      },
      "value": "30"
    },
    {
      "name": "MIN_URI_LENGTH",
      "type": {
        "defined": "usize"
      },
      "value": "5"
    },
    {
      "name": "MAX_URI_LENGTH",
      "type": {
        "defined": "usize"
      },
      "value": "200"
    },
    {
      "name": "MIN_ALIAS_LENGTH",
      "type": {
        "defined": "usize"
      },
      "value": "4"
    },
    {
      "name": "MAX_ALIAS_LENGTH",
      "type": {
        "defined": "usize"
      },
      "value": "20"
    },
    {
      "name": "MAX_STATUS_LENGTH",
      "type": {
        "defined": "usize"
      },
      "value": "64"
    },
    {
      "name": "UUID_LENGTH",
      "type": {
        "defined": "usize"
      },
      "value": "32"
    },
    {
      "name": "MAX_NOTIFICATION_LENGTH",
      "type": {
        "defined": "usize"
      },
      "value": "200"
    },
    {
      "name": "MAX_PROFILE_FIRST_NAME_LENGTH",
      "type": {
        "defined": "usize"
      },
      "value": "20"
    },
    {
      "name": "MAX_PROFILE_LAST_NAME_LENGTH",
      "type": {
        "defined": "usize"
      },
      "value": "30"
    },
    {
      "name": "MIN_SUBSPACE_NAME_LENGTH",
      "type": {
        "defined": "usize"
      },
      "value": "4"
    },
    {
      "name": "MAX_SUBSPACE_NAME_LENGTH",
      "type": {
        "defined": "usize"
      },
      "value": "32"
    },
    {
      "name": "MAX_TAG_LENGTH",
      "type": {
        "defined": "usize"
      },
      "value": "12"
    },
    {
      "name": "MAX_AGE_IN_YEARS",
      "type": "i64",
      "value": "120"
    },
    {
      "name": "MIN_AGE_IN_YEARS",
      "type": "i64",
      "value": "6"
    }
  ],
  "instructions": [
    {
      "name": "addDeveloper",
      "docs": [
        "Approve new Developer whitelis proof",
        "",
        "# Arguments",
        "",
        "* `developer` - Developer Pubkey",
        ""
      ],
      "accounts": [
        {
          "name": "developerWhitelistProof",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "authority",
          "isMut": true,
          "isSigner": true
        },
        {
          "name": "systemProgram",
          "isMut": false,
          "isSigner": false
        }
      ],
      "args": [
        {
          "name": "developer",
          "type": "publicKey"
        }
      ]
    },
    {
      "name": "deleteDeveloper",
      "docs": [
        "Delete existing Developer whitelis proof",
        ""
      ],
      "accounts": [
        {
          "name": "developerWhitelistProof",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "authority",
          "isMut": true,
          "isSigner": true
        },
        {
          "name": "systemProgram",
          "isMut": false,
          "isSigner": false
        }
      ],
      "args": []
    },
    {
      "name": "addProcessor",
      "docs": [
        "Approve new Protocol external Processor to whitelist",
        "",
        "# Arguments",
        "",
        "* `processor_type` - Processor type",
        "* `processor_name` - Processor name",
        "* `program_address` - Processor program aggress",
        "* `developer_wallet` - Processor developer wallet (optional)",
        ""
      ],
      "accounts": [
        {
          "name": "processorPda",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "developerWhitelistProof",
          "isMut": false,
          "isSigner": false,
          "isOptional": true,
          "docs": [
            "Developer whitelist proof"
          ]
        },
        {
          "name": "authority",
          "isMut": true,
          "isSigner": true
        },
        {
          "name": "systemProgram",
          "isMut": false,
          "isSigner": false
        }
      ],
      "args": [
        {
          "name": "processorType",
          "type": {
            "defined": "ProcessorType"
          }
        },
        {
          "name": "processorName",
          "type": "string"
        },
        {
          "name": "programAddress",
          "type": "publicKey"
        },
        {
          "name": "developerWallet",
          "type": {
            "option": "publicKey"
          }
        }
      ]
    },
    {
      "name": "deleteProcessor",
      "docs": [
        "Delete existing Protocol external Processor from whitelist",
        "",
        "# Arguments",
        "",
        "* `program_address` - Processor program aggress",
        ""
      ],
      "accounts": [
        {
          "name": "processor",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "authority",
          "isMut": true,
          "isSigner": true
        },
        {
          "name": "systemProgram",
          "isMut": false,
          "isSigner": false
        }
      ],
      "args": [
        {
          "name": "programAddress",
          "type": "publicKey"
        }
      ]
    },
    {
      "name": "initializeApp",
      "docs": [
        "Initialize new Protocol Application",
        "",
        "# Arguments",
        "",
        "* `app_name` - Protocol unique Application name",
        "* `data` - A struct that holds Application data",
        ""
      ],
      "accounts": [
        {
          "name": "app",
          "isMut": true,
          "isSigner": false,
          "docs": [
            "Current App (PDA) account"
          ]
        },
        {
          "name": "developerWhitelistProof",
          "isMut": false,
          "isSigner": false,
          "isOptional": true,
          "docs": [
            "Developer whitelist proof"
          ]
        },
        {
          "name": "registeringProcessorPda",
          "isMut": false,
          "isSigner": false,
          "isOptional": true,
          "docs": [
            "External Processor PDA that proof Processor passed to assign is whitelisted",
            "Must be passed if user wants to assign External Processor for additional Registering processing"
          ]
        },
        {
          "name": "connectingProcessorPda",
          "isMut": false,
          "isSigner": false,
          "isOptional": true,
          "docs": [
            "External Processor PDA that proof Processor passed to assign is whitelisted",
            "Must be passed if user wants to assign External Processor for additional Connecting processing"
          ]
        },
        {
          "name": "publishingProcessorPda",
          "isMut": false,
          "isSigner": false,
          "isOptional": true,
          "docs": [
            "External Processor PDA that proof Processor passed to assign is whitelisted",
            "Must be passed if user wants to assign External Processor for additional Publishing processing"
          ]
        },
        {
          "name": "collectingProcessorPda",
          "isMut": false,
          "isSigner": false,
          "isOptional": true,
          "docs": [
            "External Processor PDA that proof Processor passed to assign is whitelisted",
            "Must be passed if user wants to assign External Processor for additional Collecting processing"
          ]
        },
        {
          "name": "referencingProcessorPda",
          "isMut": false,
          "isSigner": false,
          "isOptional": true,
          "docs": [
            "External Processor PDA that proof Processor passed to assign is whitelisted",
            "Must be passed if user wants to assign External Processor for additional Referencing processing"
          ]
        },
        {
          "name": "authority",
          "isMut": true,
          "isSigner": true
        },
        {
          "name": "systemProgram",
          "isMut": false,
          "isSigner": false
        }
      ],
      "args": [
        {
          "name": "appName",
          "type": "string"
        },
        {
          "name": "data",
          "type": {
            "defined": "AppData"
          }
        }
      ]
    },
    {
      "name": "updateApp",
      "docs": [
        "Update existing Protocol Application",
        "",
        "# Arguments",
        "",
        "* `data` - A struct that holds Application data",
        ""
      ],
      "accounts": [
        {
          "name": "app",
          "isMut": true,
          "isSigner": false,
          "docs": [
            "Current App (PDA) account"
          ]
        },
        {
          "name": "registeringProcessorPda",
          "isMut": false,
          "isSigner": false,
          "isOptional": true,
          "docs": [
            "External Processor PDA that proof Processor passed to assign is whitelisted",
            "Must be passed if user wants to assign External Processor for additional Registering processing"
          ]
        },
        {
          "name": "connectingProcessorPda",
          "isMut": false,
          "isSigner": false,
          "isOptional": true,
          "docs": [
            "External Processor PDA that proof Processor passed to assign is whitelisted",
            "Must be passed if user wants to assign External Processor for additional Connecting processing"
          ]
        },
        {
          "name": "publishingProcessorPda",
          "isMut": false,
          "isSigner": false,
          "isOptional": true,
          "docs": [
            "External Processor PDA that proof Processor passed to assign is whitelisted",
            "Must be passed if user wants to assign External Processor for additional Publishing processing"
          ]
        },
        {
          "name": "collectingProcessorPda",
          "isMut": false,
          "isSigner": false,
          "isOptional": true,
          "docs": [
            "External Processor PDA that proof Processor passed to assign is whitelisted",
            "Must be passed if user wants to assign External Processor for additional Collecting processing"
          ]
        },
        {
          "name": "referencingProcessorPda",
          "isMut": false,
          "isSigner": false,
          "isOptional": true,
          "docs": [
            "External Processor PDA that proof Processor passed to assign is whitelisted",
            "Must be passed if user wants to assign External Processor for additional Referencing processing"
          ]
        },
        {
          "name": "authority",
          "isMut": true,
          "isSigner": true
        },
        {
          "name": "systemProgram",
          "isMut": false,
          "isSigner": false
        }
      ],
      "args": [
        {
          "name": "data",
          "type": {
            "defined": "AppData"
          }
        }
      ]
    },
    {
      "name": "createProfile",
      "docs": [
        "Create new user Profile",
        "",
        "# Arguments",
        "",
        "* `data` - A struct that holds user Profile data",
        "* `external_processing_data` - additional data that could be passed to an external Processor",
        ""
      ],
      "accounts": [
        {
          "name": "app",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "profile",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "aliasPda",
          "isMut": true,
          "isSigner": false,
          "isOptional": true,
          "docs": [
            "PDA to register Profile Alias (user can change Alias in the future - delete old PDA and create new one available)"
          ]
        },
        {
          "name": "connectingProcessorPda",
          "isMut": false,
          "isSigner": false,
          "isOptional": true,
          "docs": [
            "External Processor PDA that proof Processor passed to assign is whitelisted.",
            "Must be passed if user wants to assign Profile specified Processor for additional Connecting processing"
          ]
        },
        {
          "name": "registeringProcessor",
          "isMut": false,
          "isSigner": false,
          "isOptional": true,
          "docs": [
            "Profile Registering JXP",
            "Must be passed App has assigned Registeering JXP"
          ]
        },
        {
          "name": "authority",
          "isMut": true,
          "isSigner": true
        },
        {
          "name": "systemProgram",
          "isMut": false,
          "isSigner": false
        }
      ],
      "args": [
        {
          "name": "data",
          "type": {
            "defined": "ProfileData"
          }
        },
        {
          "name": "externalProcessingData",
          "type": {
            "option": "string"
          }
        }
      ]
    },
    {
      "name": "updateProfile",
      "docs": [
        "Update existing user profile",
        "",
        "# Arguments",
        "",
        "* `data` - A struct that holds user Profile data",
        "",
        "# Alias management cases:",
        "",
        "0) Do nothing:",
        "* data.alias = <current_alias_value>",
        "* current_alias_pda == None",
        "* new_alias_pda == None",
        "",
        "1) Register alias if not yet registered:",
        "* data.alias = <alias_value>",
        "* current_alias_pda == None",
        "* new_alias_pda == Some(alias_value)",
        "",
        "2) Update current alias (register new and delete current):",
        "* data.alias = <new_alias_value>",
        "* current_alias_pda == Some(current_alias_value)",
        "* new_alias_pda == Some(new_alias_value)",
        "",
        "3) Delete current alias:",
        "* data.alias = None",
        "* current_alias_pda == Some(current_alias_value)",
        "* new_alias_pda == None",
        ""
      ],
      "accounts": [
        {
          "name": "app",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "profile",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "currentAliasPda",
          "isMut": true,
          "isSigner": false,
          "isOptional": true
        },
        {
          "name": "newAliasPda",
          "isMut": true,
          "isSigner": false,
          "isOptional": true,
          "docs": [
            "Alias account (PDA) to register new available Alias instead old one being delete"
          ]
        },
        {
          "name": "connectingProcessorPda",
          "isMut": false,
          "isSigner": false,
          "isOptional": true,
          "docs": [
            "External Processor PDA that proof Processor passed to assign is whitelisted.",
            "Must be passed if user want to assign Profile specified Processor for additional Connecting processing"
          ]
        },
        {
          "name": "authority",
          "isMut": true,
          "isSigner": true
        },
        {
          "name": "systemProgram",
          "isMut": false,
          "isSigner": false
        }
      ],
      "args": [
        {
          "name": "data",
          "type": {
            "defined": "ProfileData"
          }
        }
      ]
    },
    {
      "name": "deleteProfile",
      "accounts": [
        {
          "name": "app",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "profile",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "aliasPda",
          "isMut": true,
          "isSigner": false,
          "isOptional": true,
          "docs": [
            "Aliasr PDA to delete",
            "Must be passed if user has a Aliasr registered"
          ]
        },
        {
          "name": "authority",
          "isMut": true,
          "isSigner": true
        },
        {
          "name": "systemProgram",
          "isMut": false,
          "isSigner": false
        }
      ],
      "args": []
    },
    {
      "name": "initializeConnection",
      "docs": [
        "",
        "# Arguments",
        "",
        "* `external_processing_data` - additional data that could be passed to an external Processor",
        ""
      ],
      "accounts": [
        {
          "name": "app",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "connection",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "initializer",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "target",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "connectingProcessor",
          "isMut": false,
          "isSigner": false,
          "isOptional": true,
          "docs": [
            "App assigned Connecting JXP"
          ]
        },
        {
          "name": "connectingProcessorIndividual",
          "isMut": false,
          "isSigner": false,
          "isOptional": true,
          "docs": [
            "Target individual Connecting JXP"
          ]
        },
        {
          "name": "authority",
          "isMut": true,
          "isSigner": true
        },
        {
          "name": "systemProgram",
          "isMut": false,
          "isSigner": false
        }
      ],
      "args": [
        {
          "name": "externalProcessingData",
          "type": {
            "option": "string"
          }
        }
      ]
    },
    {
      "name": "updateConnection",
      "docs": [
        "Update connection (approve by Target profile, e.g. - accept friend request)",
        "",
        "# Arguments",
        "",
        "* `approve_status` - A boolean that holds connection approve status (by Target)",
        ""
      ],
      "accounts": [
        {
          "name": "app",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "connection",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "initializer",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "target",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "user",
          "isMut": true,
          "isSigner": true
        },
        {
          "name": "systemProgram",
          "isMut": false,
          "isSigner": false
        }
      ],
      "args": [
        {
          "name": "approveStatus",
          "type": "bool"
        }
      ]
    },
    {
      "name": "deleteConnection",
      "accounts": [
        {
          "name": "app",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "connection",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "initializerProfile",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "target",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "authority",
          "isMut": true,
          "isSigner": true
        },
        {
          "name": "systemProgram",
          "isMut": false,
          "isSigner": false
        }
      ],
      "args": []
    },
    {
      "name": "createSubspace",
      "docs": [
        "Create application Subspace owned by specified Profile (e.g. group or \"public\")",
        "",
        "# Arguments",
        "",
        "* `uuid` - A Subspace UUID",
        "* `data` - A struct that holds Subspace data",
        ""
      ],
      "accounts": [
        {
          "name": "app",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "creatorProfile",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "subspace",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "aliasPda",
          "isMut": true,
          "isSigner": false,
          "isOptional": true,
          "docs": [
            "A PDA to claim Subspace alias - this way Subspace owner can change alias in the future (delete old PDA and create new one available)"
          ]
        },
        {
          "name": "connectingProcessorPda",
          "isMut": false,
          "isSigner": false,
          "isOptional": true,
          "docs": [
            "External Processor PDA that proof Processor passed to assign is whitelisted.",
            "Must be passed if user want to assign Subspace specified Processor for additional Connecting processing"
          ]
        },
        {
          "name": "publishingProcessorPda",
          "isMut": false,
          "isSigner": false,
          "isOptional": true,
          "docs": [
            "External Processor PDA that proof Processor passed to assign is whitelisted.",
            "Must be passed if user want to assign Subspace specified Processor for additional Publishing processing"
          ]
        },
        {
          "name": "collectingProcessorPda",
          "isMut": false,
          "isSigner": false,
          "isOptional": true,
          "docs": [
            "External Processor PDA that proof Processor passed to assign is whitelisted.",
            "Must be passed if user want to assign Subspace specified Processor for additional Collecting processing"
          ]
        },
        {
          "name": "referencingProcessorPda",
          "isMut": false,
          "isSigner": false,
          "isOptional": true,
          "docs": [
            "External Processor PDA that proof Processor passed to assign is whitelisted.",
            "Must be passed if user want to assign Subspace specified Processor for additional Referencing processing"
          ]
        },
        {
          "name": "authority",
          "isMut": true,
          "isSigner": true
        },
        {
          "name": "systemProgram",
          "isMut": false,
          "isSigner": false
        }
      ],
      "args": [
        {
          "name": "uuid",
          "type": "string"
        },
        {
          "name": "data",
          "type": {
            "defined": "SubspaceData"
          }
        }
      ]
    },
    {
      "name": "updateSubspace",
      "docs": [
        "Update existing Application Subspace",
        "",
        "# Arguments",
        "",
        "* `data` - A struct that holds Subspace data",
        "",
        "# Alias management cases:",
        "",
        "0) Do nothing:",
        "* data.alias = <current_alias_value>",
        "* current_alias_pda == None",
        "* new_alias_pda == None",
        "",
        "1) Register alias if not yet registered:",
        "* data.alias = alias_value",
        "* current_alias_pda == None",
        "* new_alias_pda == Some(alias_value)",
        "",
        "2) Update current alias (register new and delete current):",
        "* data.alias = new_alias_value",
        "* current_alias_pda == Some(current_alias_value)",
        "* new_alias_pda == Some(new_alias_value)",
        "",
        "3) Delete current alias:",
        "* data.alias = None",
        "* current_alias_pda == Some(current_alias_value)",
        "* new_alias_pda == None",
        ""
      ],
      "accounts": [
        {
          "name": "app",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "creatorProfile",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "subspace",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "currentAliasPda",
          "isMut": true,
          "isSigner": false,
          "isOptional": true
        },
        {
          "name": "newAliasPda",
          "isMut": true,
          "isSigner": false,
          "isOptional": true
        },
        {
          "name": "connectingProcessorPda",
          "isMut": false,
          "isSigner": false,
          "isOptional": true,
          "docs": [
            "External Processor PDA that proof Processor passed to assign is whitelisted.",
            "Must be passed if user want to assign Subspace specified Processor for additional Connecting processing"
          ]
        },
        {
          "name": "publishingProcessorPda",
          "isMut": false,
          "isSigner": false,
          "isOptional": true,
          "docs": [
            "External Processor PDA that proof Processor passed to assign is whitelisted.",
            "Must be passed if user want to assign Subspace specified Processor for additional Publishing processing"
          ]
        },
        {
          "name": "collectingProcessorPda",
          "isMut": false,
          "isSigner": false,
          "isOptional": true,
          "docs": [
            "External Processor PDA that proof Processor passed to assign is whitelisted.",
            "Must be passed if user want to assign Subspace specified Processor for additional Collecting processing"
          ]
        },
        {
          "name": "referencingProcessorPda",
          "isMut": false,
          "isSigner": false,
          "isOptional": true,
          "docs": [
            "External Processor PDA that proof Processor passed to assign is whitelisted.",
            "Must be passed if user want to assign Subspace specified Processor for additional Referencing processing"
          ]
        },
        {
          "name": "authority",
          "isMut": true,
          "isSigner": true
        },
        {
          "name": "systemProgram",
          "isMut": false,
          "isSigner": false
        }
      ],
      "args": [
        {
          "name": "data",
          "type": {
            "defined": "SubspaceData"
          }
        }
      ]
    },
    {
      "name": "deleteSubspace",
      "accounts": [
        {
          "name": "app",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "subspace",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "aliasPda",
          "isMut": true,
          "isSigner": false,
          "isOptional": true,
          "docs": [
            "Aliasr PDA to delete",
            "Must be passed if user has a Aliasr registered"
          ]
        },
        {
          "name": "authority",
          "isMut": true,
          "isSigner": true
        },
        {
          "name": "systemProgram",
          "isMut": false,
          "isSigner": false
        }
      ],
      "args": []
    },
    {
      "name": "addSubspaceManager",
      "docs": [
        "Approve new Subspace manager",
        "",
        "/// # Arguments",
        "",
        "* `manager_role` - Subspace manager Role",
        ""
      ],
      "accounts": [
        {
          "name": "app",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "subspace",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "profile",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "connectionProof",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "manager",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "authority",
          "isMut": true,
          "isSigner": true
        },
        {
          "name": "systemProgram",
          "isMut": false,
          "isSigner": false
        }
      ],
      "args": [
        {
          "name": "managerRole",
          "type": {
            "defined": "SubspaceManagementRoleType"
          }
        }
      ]
    },
    {
      "name": "updateSubspaceManager",
      "docs": [
        "Update an existing Subspace manager",
        "",
        "/// # Arguments",
        "",
        "* `manager_role` - Subspace manager Role",
        ""
      ],
      "accounts": [
        {
          "name": "app",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "subspace",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "profile",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "connectionProof",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "manager",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "authority",
          "isMut": true,
          "isSigner": true
        },
        {
          "name": "systemProgram",
          "isMut": false,
          "isSigner": false
        }
      ],
      "args": [
        {
          "name": "managerRole",
          "type": {
            "defined": "SubspaceManagementRoleType"
          }
        }
      ]
    },
    {
      "name": "deleteSubspaceManager",
      "docs": [
        "Delete existing Subspace manager",
        ""
      ],
      "accounts": [
        {
          "name": "app",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "subspace",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "profile",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "manager",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "authority",
          "isMut": true,
          "isSigner": true
        },
        {
          "name": "systemProgram",
          "isMut": false,
          "isSigner": false
        }
      ],
      "args": []
    },
    {
      "name": "createPublication",
      "docs": [
        "Create new publication",
        "",
        "# Arguments",
        "",
        "* `uuid` - Publication UUID",
        "* `data` - A struct that holds Publication parameters",
        "* `external_processing_data` - additional data that can be passed to an external processor",
        ""
      ],
      "accounts": [
        {
          "name": "app",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "profile",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "publication",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "subspace",
          "isMut": false,
          "isSigner": false,
          "isOptional": true,
          "docs": [
            "Subspace (PDA)",
            "Must be passed if Publication will store in Subspace"
          ]
        },
        {
          "name": "targetPublication",
          "isMut": false,
          "isSigner": false,
          "isOptional": true,
          "docs": [
            "Publication PDA which has to be replyed or referenced",
            "Must be passed if this mirroring or replying"
          ]
        },
        {
          "name": "connectionProof",
          "isMut": false,
          "isSigner": false,
          "isOptional": true,
          "docs": [
            "Connection PDA that proof Publisher (Profile) is connected to Subspace",
            "Must be passed in case Publication target is a Subspace"
          ]
        },
        {
          "name": "subspaceManagerProof",
          "isMut": false,
          "isSigner": false,
          "isOptional": true,
          "docs": [
            "SubspaceManager PDA that proof Publisher (Subspace member Profile) is a Manager of Subspace",
            "Must be passed in case Publication target is a Subspace"
          ]
        },
        {
          "name": "collectingProcessorPda",
          "isMut": false,
          "isSigner": false,
          "isOptional": true,
          "docs": [
            "External Processor PDA that proof Processor passed to assign is whitelisted.",
            "Must be passed if user want to assign Publication specified Processor for additional Collecting processing"
          ]
        },
        {
          "name": "referencingProcessorPda",
          "isMut": false,
          "isSigner": false,
          "isOptional": true,
          "docs": [
            "External Processor PDA that proof Processor passed to assign is whitelisted.",
            "Must be passed if user want to assign Publication specified Processor for additional Referencing processing"
          ]
        },
        {
          "name": "publishingProcessor",
          "isMut": false,
          "isSigner": false,
          "isOptional": true,
          "docs": [
            "App assigned JXP that makes Publication Creation additional procesing",
            "Must be passed if App has assigned Publication JXP",
            "Check: Compared inside instruction handler"
          ]
        },
        {
          "name": "referencingProcessor",
          "isMut": false,
          "isSigner": false,
          "isOptional": true,
          "docs": [
            "App assigned JXP that makes Publication Referencing additional procesing",
            "Must be passed if App has assigned Referencing JXP",
            "Check: Compared inside instruction handler"
          ]
        },
        {
          "name": "referencingProcessorIndividual",
          "isMut": false,
          "isSigner": false,
          "isOptional": true,
          "docs": [
            "Publication individual JXP that makes Publication Referencing additional processing",
            "Must be passed if Publication has assigned individual Referencing JXP",
            "Check: Compared inside instruction handler"
          ]
        },
        {
          "name": "authority",
          "isMut": true,
          "isSigner": true
        },
        {
          "name": "systemProgram",
          "isMut": false,
          "isSigner": false
        }
      ],
      "args": [
        {
          "name": "uuid",
          "type": "string"
        },
        {
          "name": "data",
          "type": {
            "defined": "PublicationData"
          }
        },
        {
          "name": "externalProcessingData",
          "type": {
            "option": "string"
          }
        }
      ]
    },
    {
      "name": "updatePublication",
      "docs": [
        "Update existing Publication",
        "",
        "# Arguments",
        "",
        "* `data` - A struct that holds Publication data",
        ""
      ],
      "accounts": [
        {
          "name": "app",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "profile",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "publication",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "subspace",
          "isMut": false,
          "isSigner": false,
          "isOptional": true,
          "docs": [
            "Subspace (PDA)",
            "Must be passed if Publication store in Subspace"
          ]
        },
        {
          "name": "connectionProof",
          "isMut": false,
          "isSigner": false,
          "isOptional": true,
          "docs": [
            "Connection PDA that proof Publisher (Profile) is connected to Subspace",
            "Must be passed in case Publication target is a Subspace"
          ]
        },
        {
          "name": "subspaceManagerProof",
          "isMut": false,
          "isSigner": false,
          "isOptional": true,
          "docs": [
            "SubspaceManager PDA that proof Publisher (Subspace member Profile) is a Manager of Subspace",
            "Must be passed in case Publication target is a Subspace"
          ]
        },
        {
          "name": "collectingProcessorPda",
          "isMut": false,
          "isSigner": false,
          "isOptional": true,
          "docs": [
            "External Processor PDA that proof Processor passed to assign is whitelisted.",
            "Must be passed if user want to assign Publication specified Processor for additional Collecting processing"
          ]
        },
        {
          "name": "referencingProcessorPda",
          "isMut": false,
          "isSigner": false,
          "isOptional": true,
          "docs": [
            "External Processor PDA that proof Processor passed to assign is whitelisted.",
            "Must be passed if user want to assign Publication specified Processor for additional Referencing processing"
          ]
        },
        {
          "name": "authority",
          "isMut": true,
          "isSigner": true
        },
        {
          "name": "systemProgram",
          "isMut": false,
          "isSigner": false
        }
      ],
      "args": [
        {
          "name": "data",
          "type": {
            "defined": "PublicationData"
          }
        }
      ]
    },
    {
      "name": "deletePublication",
      "accounts": [
        {
          "name": "app",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "profile",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "publication",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "authority",
          "isMut": true,
          "isSigner": true
        },
        {
          "name": "systemProgram",
          "isMut": false,
          "isSigner": false
        }
      ],
      "args": []
    },
    {
      "name": "collectPublication",
      "docs": [
        "Collect existing Publication",
        "",
        "# Arguments",
        "",
        "* `external_processing_data` - additional data that can be passed to an external Collecting Processor",
        ""
      ],
      "accounts": [
        {
          "name": "app",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "initializer",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "target",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "collectionItem",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "collectingProcessor",
          "isMut": false,
          "isSigner": false,
          "isOptional": true,
          "docs": [
            "App assigned JXP that makes Publication Collecting additional procesing",
            "Must be passed if App has assigned Collecting JXP",
            "Check: Compared inside instruction handler"
          ]
        },
        {
          "name": "collectingProcessorIndividual",
          "isMut": false,
          "isSigner": false,
          "isOptional": true,
          "docs": [
            "Publication individual JXP that makes Publication Collecting additional processing",
            "Must be passed if Publication has assigned individual Collecting JXP",
            "Check: Compared inside instruction handler"
          ]
        },
        {
          "name": "authority",
          "isMut": true,
          "isSigner": true
        },
        {
          "name": "systemProgram",
          "isMut": false,
          "isSigner": false
        }
      ],
      "args": [
        {
          "name": "externalProcessingData",
          "type": {
            "option": "string"
          }
        }
      ]
    },
    {
      "name": "createReaction",
      "docs": [
        "Create publication reaction",
        "",
        "# Arguments",
        "",
        "* `data` - A struct that holds Reaction data",
        ""
      ],
      "accounts": [
        {
          "name": "app",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "initializer",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "target",
          "isMut": false,
          "isSigner": false,
          "docs": [
            "Report target - potentialy could be a Profile or Publication"
          ]
        },
        {
          "name": "reaction",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "authority",
          "isMut": true,
          "isSigner": true
        },
        {
          "name": "systemProgram",
          "isMut": false,
          "isSigner": false
        }
      ],
      "args": [
        {
          "name": "reactionType",
          "type": {
            "defined": "ReactionType"
          }
        }
      ]
    },
    {
      "name": "deleteReaction",
      "docs": [
        "Delete existing Publication Reaction"
      ],
      "accounts": [
        {
          "name": "app",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "initializer",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "target",
          "isMut": false,
          "isSigner": false,
          "docs": [
            "Report target - potentialy could be a Profile or Publication"
          ]
        },
        {
          "name": "reaction",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "authority",
          "isMut": true,
          "isSigner": true
        },
        {
          "name": "systemProgram",
          "isMut": false,
          "isSigner": false
        }
      ],
      "args": []
    },
    {
      "name": "initializeReport",
      "docs": [
        "Initialize new Report",
        "",
        "# Arguments",
        "",
        "* `data` - A struct that holds Report data",
        ""
      ],
      "accounts": [
        {
          "name": "app",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "initializer",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "target",
          "isMut": false,
          "isSigner": false,
          "docs": [
            "Report target - potentialy could be a Profile, Subspace or Publication"
          ]
        },
        {
          "name": "report",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "authority",
          "isMut": true,
          "isSigner": true
        },
        {
          "name": "systemProgram",
          "isMut": false,
          "isSigner": false
        }
      ],
      "args": [
        {
          "name": "data",
          "type": {
            "defined": "ReportData"
          }
        }
      ]
    }
  ],
  "accounts": [
    {
      "name": "DeveloperWhitelistProof",
      "docs": [
        "DeveloperWhitelistProof account is proof that pubkey owner is able to create protocol application",
        "",
        "# DeveloperWhitelistProof account stores:",
        "",
        "1. Authority address",
        "2. Developer address",
        ""
      ],
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "authority",
            "docs": [
              "Account authority (32)."
            ],
            "type": "publicKey"
          },
          {
            "name": "developer",
            "docs": [
              "Developer address (32)."
            ],
            "type": "publicKey"
          }
        ]
      }
    },
    {
      "name": "ExternalProcessorPDA",
      "docs": [
        "ExternalProcessorPDA that holds data about every whitelisted Protocol external Processors",
        "",
        "# ExternalProcessorPDA account stores:",
        "",
        "1. Processor type",
        "2. Proccessor Approve status",
        "3. Processor PDA authority address",
        "4. Processorr program address",
        "5. Processor developer walet",
        "6. Processor name (ASCII alphanumeric)",
        ""
      ],
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "processorType",
            "docs": [
              "Processot type (1)"
            ],
            "type": {
              "defined": "ProcessorType"
            }
          },
          {
            "name": "isApproved",
            "docs": [
              "Approve status"
            ],
            "type": "bool"
          },
          {
            "name": "authority",
            "docs": [
              "Processor PDA authority (32)."
            ],
            "type": "publicKey"
          },
          {
            "name": "programAddress",
            "docs": [
              "External Processor executable program address"
            ],
            "type": "publicKey"
          },
          {
            "name": "developerWallet",
            "docs": [
              "Processor program author wallet"
            ],
            "type": {
              "option": "publicKey"
            }
          },
          {
            "name": "processorName",
            "docs": [
              "Processor name (STRING_LENGTH_PREFIX + MAX_PROCESSORNAME_LENGTH)."
            ],
            "type": "string"
          }
        ]
      }
    },
    {
      "name": "App",
      "docs": [
        "# App account for every protocol Application",
        "",
        "## App account stores:",
        "",
        "1. `authority`: Application authority address",
        "2. `profile_metadata_required`: Specifies whether the Profile metadata required",
        "3. `subspace_metadata_required`: Specifies whether the Subspace metadata required",
        "4. `profile_delete_allowed`: Specifies the permission to delete a Profile",
        "5. `subspace_delete_allowed`: Specifies the permission to delete a Subspace",
        "6. `publication_delete_allowed`: Specifies the permission to delete a Publication",
        "7. `profile_individual_processors_allowed`: Specifies the permission to assign Profile's individual external processors.",
        "8. `subspace_individual_processors_allowed`: Specifies the permission to assign Subspace's individual external processors.",
        "9. `publication_individual_processors_allowed`: Specifies the permission to assign Publication's individual external processors.",
        "10. `app_name`: Unique Application name (ID) as string (ASCII alphanumeric)",
        "11. `metadata_uri`: Application metadata URI (settings)",
        "12. `registering_processor`: An address of an external processor for additional processing during Profile creation",
        "13. `connecting_processor`: An address of an external processor for additional processing during Profile connection",
        "14. `publishing_processor`: An address of an external processor for additional processing during Publication creation",
        "15. `collecting_processor`: An address of an external processor for additional processing during Publication collection",
        "16. `referencing_processor`: An address of an external processor for additional processing during Publication referencing",
        "17.  ***** `reserved_1`: Reserved field 1",
        "18.  ***** `reserved_1`: Reserved field 2",
        "19.  ***** `reserved_1`: Reserved field 3",
        ""
      ],
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "authority",
            "docs": [
              "Pubkey of the application creator (32)."
            ],
            "type": "publicKey"
          },
          {
            "name": "profileMetadataRequired",
            "docs": [
              "Specifies whether the Profile metadata required."
            ],
            "type": "bool"
          },
          {
            "name": "subspaceMetadataRequired",
            "docs": [
              "Specifies whether the Subspace metadata required."
            ],
            "type": "bool"
          },
          {
            "name": "profileDeleteAllowed",
            "docs": [
              "Specifies the permission to delete a Profile."
            ],
            "type": "bool"
          },
          {
            "name": "subspaceDeleteAllowed",
            "docs": [
              "Specifies the permission to delete a Subspace."
            ],
            "type": "bool"
          },
          {
            "name": "publicationDeleteAllowed",
            "docs": [
              "Specifies the permission to delete a Publication."
            ],
            "type": "bool"
          },
          {
            "name": "profileIndividualProcessorsAllowed",
            "docs": [
              "Specifies the permission to assign Profile's individual external processors."
            ],
            "type": "bool"
          },
          {
            "name": "subspaceIndividualProcessorsAllowed",
            "docs": [
              "Specifies the permission to assign Subspace's individual external processors."
            ],
            "type": "bool"
          },
          {
            "name": "publicationIndividualProcessorsAllowed",
            "docs": [
              "Specifies the permission to assign Publication's individual external processors."
            ],
            "type": "bool"
          },
          {
            "name": "appName",
            "docs": [
              "App name/ID (STRING_LENGTH_PREFIX + MAX_APPID_LENGTH)."
            ],
            "type": "string"
          },
          {
            "name": "metadataUri",
            "docs": [
              "URI of the metadata (1 + STRING_LENGTH_PREFIX + MAX_URI_LENGTH)."
            ],
            "type": {
              "option": "string"
            }
          },
          {
            "name": "registeringProcessor",
            "docs": [
              "An address of an external processor for additional processing during Profile creation."
            ],
            "type": {
              "option": "publicKey"
            }
          },
          {
            "name": "connectingProcessor",
            "docs": [
              "An address of an external processor for additional processing during Profile connection."
            ],
            "type": {
              "option": "publicKey"
            }
          },
          {
            "name": "publishingProcessor",
            "docs": [
              "An address of an external processor for additional processing during Publication creation."
            ],
            "type": {
              "option": "publicKey"
            }
          },
          {
            "name": "collectingProcessor",
            "docs": [
              "An address of an external processor for additional processing during Publication collection."
            ],
            "type": {
              "option": "publicKey"
            }
          },
          {
            "name": "referencingProcessor",
            "docs": [
              "An address of an external processor for additional processing during Publication referencing."
            ],
            "type": {
              "option": "publicKey"
            }
          },
          {
            "name": "reserved1",
            "type": {
              "array": [
                "u8",
                32
              ]
            }
          },
          {
            "name": "reserved2",
            "type": {
              "array": [
                "u8",
                32
              ]
            }
          },
          {
            "name": "reserved3",
            "type": {
              "array": [
                "u8",
                32
              ]
            }
          }
        ]
      }
    },
    {
      "name": "Profile",
      "docs": [
        "Profile account that holds data about Application user",
        "",
        "# Profile account stores:",
        "",
        "1. Application account (PDA)",
        "2. Profile authority address",
        "3. Exchange key",
        "4. Verification status",
        "5. Profile country code",
        "6. Profile region code",
        "7. Profile city code",
        "8. Profile first name",
        "9. Profile last name",
        "10. Profile birth date as unix timestamp",
        "11. Profile birth seachable number of 10-years-period (decade)",
        "12. Profile birth seachable number of 5-years-period",
        "13. Profile birth seachable number of week-period",
        "14. Profile birth seachable number of day",
        "15. Profile gender",
        "16. Unique Application's user Profile Alias as string (ASCII alphanumeric)",
        "17. Profile status text",
        "18. Profile metadata URI",
        "19. Profile location coordinates",
        "20. External connection processor (optional)",
        "21. Profile creation unix timestamp",
        "22. Profile modification unix timestamp",
        "23. ***** Reserved field 1",
        "24. ***** Reserved field 2",
        "25. ***** Reserved field 3",
        ""
      ],
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "app",
            "docs": [
              "Application Pubkey (32)"
            ],
            "type": "publicKey"
          },
          {
            "name": "authority",
            "docs": [
              "Pubkey of the profile owner (32)."
            ],
            "type": "publicKey"
          },
          {
            "name": "exchangeKey",
            "type": "publicKey"
          },
          {
            "name": "isVerified",
            "docs": [
              "Verified status for users (1)"
            ],
            "type": "bool"
          },
          {
            "name": "countryCode",
            "type": "u16"
          },
          {
            "name": "regionCode",
            "type": "u16"
          },
          {
            "name": "cityCode",
            "type": "u16"
          },
          {
            "name": "firstName",
            "type": {
              "array": [
                "u8",
                20
              ]
            }
          },
          {
            "name": "lastName",
            "type": {
              "array": [
                "u8",
                30
              ]
            }
          },
          {
            "name": "birthDate",
            "type": "i64"
          },
          {
            "name": "searchable10Years",
            "type": "i64"
          },
          {
            "name": "searchable5Years",
            "type": "i64"
          },
          {
            "name": "searchableWeek",
            "type": "i64"
          },
          {
            "name": "searchableDay",
            "type": "i64"
          },
          {
            "name": "gender",
            "docs": [
              "Profile's user gender"
            ],
            "type": {
              "option": {
                "defined": "Gender"
              }
            }
          },
          {
            "name": "alias",
            "docs": [
              "Profile alias (1 + STRING_LENGTH_PREFIX + MAX_ALIAS_LENGTH)."
            ],
            "type": {
              "option": "string"
            }
          },
          {
            "name": "statusText",
            "docs": [
              "Profile Status text (STRING_LENGTH_PREFIX + MAX_STATUS_LENGTH)"
            ],
            "type": "string"
          },
          {
            "name": "metadataUri",
            "docs": [
              "Profile metadata URI (STRING_LENGTH_PREFIX + MAX_URI_LENGTH)."
            ],
            "type": {
              "option": "string"
            }
          },
          {
            "name": "currentLocation",
            "type": {
              "option": {
                "defined": "LocationCoordinates"
              }
            }
          },
          {
            "name": "connectingProcessor",
            "docs": [
              "An address of a Program (external processor) for Connection additional processing (33)"
            ],
            "type": {
              "option": "publicKey"
            }
          },
          {
            "name": "createdAt",
            "docs": [
              "Profile creation Unix timestamp (8)"
            ],
            "type": "i64"
          },
          {
            "name": "modifiedAt",
            "docs": [
              "The optional Unix timestamp of the Profile modification (1 + 8)"
            ],
            "type": {
              "option": "i64"
            }
          },
          {
            "name": "reserved1",
            "type": {
              "array": [
                "u8",
                32
              ]
            }
          },
          {
            "name": "reserved2",
            "type": {
              "array": [
                "u8",
                32
              ]
            }
          },
          {
            "name": "reserved3",
            "type": {
              "array": [
                "u8",
                32
              ]
            }
          }
        ]
      }
    },
    {
      "name": "Subspace",
      "docs": [
        "The Subspace is an account (PDA) that holds data about a application Subspace (e.g. group / \"public\")",
        "",
        "# Subspace account stores:",
        "",
        "1. Application address",
        "2. Profile authority address",
        "3. Subspace owner Profile Pubkey",
        "4. Exchange key",
        "5. Subspace name",
        "6. Subspace publishing permission level",
        "7. Unique application's user profile alias as string (optional, ASCII alphanumeric) (optional)",
        "8. Subspace UUID",
        "9. Subspace metadata URI (optional)",
        "10. External Publishing processor (optional)",
        "11. External Connecting processor (optional)",
        "12. External Collecting processor (optional)",
        "13. External Referencing processor (optional)",
        "14. Profile creation unix timestamp",
        "15. ***** Reserved field 1",
        "16. ***** Reserved field 2",
        ""
      ],
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "app",
            "docs": [
              "Application Pubkey (32)"
            ],
            "type": "publicKey"
          },
          {
            "name": "authority",
            "docs": [
              "Pubkey of the profile owner (32)."
            ],
            "type": "publicKey"
          },
          {
            "name": "exchangeKey",
            "type": "publicKey"
          },
          {
            "name": "creator",
            "docs": [
              "Subspace creator Profile Pubkey (32)"
            ],
            "type": "publicKey"
          },
          {
            "name": "publishingPermission",
            "docs": [
              "Subspace publishing permission level"
            ],
            "type": {
              "defined": "SubspacePublishingPermissionLevel"
            }
          },
          {
            "name": "name",
            "docs": [
              "Subspace name"
            ],
            "type": {
              "array": [
                "u8",
                32
              ]
            }
          },
          {
            "name": "alias",
            "docs": [
              "Profile alias (1 + STRING_LENGTH_PREFIX + MAX_ALIAS_LENGTH)."
            ],
            "type": {
              "option": "string"
            }
          },
          {
            "name": "uuid",
            "docs": [
              "Subspace UUID (UUID_LENGTH)"
            ],
            "type": "string"
          },
          {
            "name": "metadataUri",
            "docs": [
              "Metadata URI (1 + STRING_LENGTH_PREFIX + MAX_URI_LENGTH)."
            ],
            "type": {
              "option": "string"
            }
          },
          {
            "name": "publishingProcessor",
            "docs": [
              "An address of a Program (external processor) for Publication Creating additional processing (1 + 32)"
            ],
            "type": {
              "option": "publicKey"
            }
          },
          {
            "name": "connectingProcessor",
            "docs": [
              "An address of a Program (external processor) for profiles Connection additional processing (1 + 32)"
            ],
            "type": {
              "option": "publicKey"
            }
          },
          {
            "name": "collectingProcessor",
            "docs": [
              "An address of a Program (external processor) for Publication Collecting additional processing (1 + 32)"
            ],
            "type": {
              "option": "publicKey"
            }
          },
          {
            "name": "referencingProcessor",
            "docs": [
              "An address of a Program (external processor) for Publication referencing additional processing (1 + 32)"
            ],
            "type": {
              "option": "publicKey"
            }
          },
          {
            "name": "createdAt",
            "docs": [
              "Subspace creation Unix timestamp (8)"
            ],
            "type": "i64"
          },
          {
            "name": "reserved1",
            "type": {
              "array": [
                "u8",
                32
              ]
            }
          },
          {
            "name": "reserved2",
            "type": {
              "array": [
                "u8",
                32
              ]
            }
          }
        ]
      }
    },
    {
      "name": "SubspaceManager",
      "docs": [
        "SubspaceManager account that holds data about Subspace management team user",
        "",
        "# SubspaceManager account stores:",
        "",
        "1. Application (PDA) address",
        "2. Subspace (PDA) address",
        "3. Profile (PDA) address",
        "4. Account authority address",
        "5. Manager Role",
        ""
      ],
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "app",
            "docs": [
              "Application Pubkey (32)"
            ],
            "type": "publicKey"
          },
          {
            "name": "subspace",
            "docs": [
              "Subspace Pubkey (32)"
            ],
            "type": "publicKey"
          },
          {
            "name": "profile",
            "docs": [
              "Pubkey of the manager Profile (32)."
            ],
            "type": "publicKey"
          },
          {
            "name": "authority",
            "docs": [
              "Pubkey of the account authority (32)."
            ],
            "type": "publicKey"
          },
          {
            "name": "role",
            "docs": [
              "Manager role"
            ],
            "type": {
              "defined": "SubspaceManagementRoleType"
            }
          }
        ]
      }
    },
    {
      "name": "Publication",
      "docs": [
        "The Publication is account (PDA) that holds Application's Publication data",
        "",
        "# Publication account stores:",
        "",
        "1. Existing Protocol Application in which Publication was created",
        "2. References to Publication's author Profile",
        "3. Publication authority address",
        "4. Whether or not the publication has encrypted content",
        "5. Whether or not the Publication is mirroring other existing Publication (e.g. re-post)",
        "6. Whether or not the Publication is replying to other existing Publication (e.g. comment)",
        "7. Publication main content type",
        "8. Publication tag",
        "9. Searchable number of 3-day-perid",
        "10. Searchable number of day",
        "11. References to existing Publication if there is a mirror or reply",
        "12. Subspace in which Publication being published",
        "13. Publication UUID as string",
        "14. Publication metadata URI",
        "15. External Collecting processor (optional)",
        "16. External Referencing processor (optional)",
        "17. Publication create unix timestamp",
        "18. Publication update unix timestamp (optional)",
        ""
      ],
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "app",
            "docs": [
              "Application account Pubkey (32)"
            ],
            "type": "publicKey"
          },
          {
            "name": "profile",
            "docs": [
              "Publication author profile account Pubkey (32)"
            ],
            "type": "publicKey"
          },
          {
            "name": "authority",
            "docs": [
              "Publication authority account Pubkey (32)"
            ],
            "type": "publicKey"
          },
          {
            "name": "isEncrypted",
            "docs": [
              "Whether or not the publication has encrypted content"
            ],
            "type": "bool"
          },
          {
            "name": "isMirror",
            "docs": [
              "Flag to determine whether publication is mirror (e.g. 'repost') (1)"
            ],
            "type": "bool"
          },
          {
            "name": "isReply",
            "docs": [
              "Flag to determine whether publication is reply (e.g. 'comment') (1)"
            ],
            "type": "bool"
          },
          {
            "name": "contentType",
            "docs": [
              "Publication content main type (1)"
            ],
            "type": {
              "defined": "ContentType"
            }
          },
          {
            "name": "tag",
            "docs": [
              "Publication Tag (e.g. 'hashtag')"
            ],
            "type": {
              "array": [
                "u8",
                12
              ]
            }
          },
          {
            "name": "searchable3Day",
            "type": "i64"
          },
          {
            "name": "searchableDay",
            "type": "i64"
          },
          {
            "name": "targetPublication",
            "docs": [
              "Pubkey that specify target in case Publication is a mirror or reply (32), default value if not mirror or reply"
            ],
            "type": "publicKey"
          },
          {
            "name": "subspace",
            "docs": [
              "Subspace to publish, default value if publishing in profile space"
            ],
            "type": "publicKey"
          },
          {
            "name": "uuid",
            "docs": [
              "Publication UUID (STRING_LENGTH_PREFIX + UUID_LENGTH)"
            ],
            "type": "string"
          },
          {
            "name": "metadataUri",
            "docs": [
              "The URI of the publication metadata(STRING_LENGTH_PREFIX + MAX_URI_LENGTH)"
            ],
            "type": "string"
          },
          {
            "name": "collectingProcessor",
            "docs": [
              "An address of a Program (external processor) for Publication Collecting additional processing (1 + 32)"
            ],
            "type": {
              "option": "publicKey"
            }
          },
          {
            "name": "referencingProcessor",
            "docs": [
              "An address of a Program (external processor) for Publication Referencing additional processing (1 + 32)"
            ],
            "type": {
              "option": "publicKey"
            }
          },
          {
            "name": "createdAt",
            "docs": [
              "Unix timestamp of the Publication creation (8)"
            ],
            "type": "i64"
          },
          {
            "name": "modifiedAt",
            "docs": [
              "The optional Unix timestamp of the Publication modification (1 + 8)"
            ],
            "type": {
              "option": "i64"
            }
          }
        ]
      }
    },
    {
      "name": "Connection",
      "docs": [
        "Connection account holds data about Connection between two Application's entities (e.g. following)",
        "",
        "# The Connection account stores:",
        "",
        "1. Application address",
        "2. Connection authority address",
        "3. Connection Target type ('profile-to-profile' or 'profile-to-subspace')",
        "4. Connection initializer address (e.g. follower)",
        "5. Target Application's Profile/Subspace address (e.g. which initializer followed)",
        "6. Whether or not Connection is approved by target (e.g. accept friend request)",
        "7. Connection initialize unix timestamp",
        "8. Searchable number of 3-day-period",
        "8. Searchable number of day",
        "9. Connection modify unix timestamp",
        ""
      ],
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "app",
            "docs": [
              "Application Pubkey (32)"
            ],
            "type": "publicKey"
          },
          {
            "name": "authority",
            "docs": [
              "Connection authority account Pubkey (32)"
            ],
            "type": "publicKey"
          },
          {
            "name": "connectionTargetType",
            "docs": [
              "Connection Target type (1)"
            ],
            "type": {
              "defined": "ConnectionTargetType"
            }
          },
          {
            "name": "initializer",
            "docs": [
              "Connection initializer Pubkey (32)"
            ],
            "type": "publicKey"
          },
          {
            "name": "target",
            "docs": [
              "Connection target Pubkey (might be another Profile or Application Subspace) (32)"
            ],
            "type": "publicKey"
          },
          {
            "name": "approved",
            "docs": [
              "Flag to determine whether Connection is approved by target entitty (e.g. accept friend request or private group acceptance) (1)"
            ],
            "type": "bool"
          },
          {
            "name": "createdAt",
            "docs": [
              "Connection initialization Unix timestamp (8)"
            ],
            "type": "i64"
          },
          {
            "name": "searchable3Day",
            "type": "i64"
          },
          {
            "name": "searchableDay",
            "type": "i64"
          },
          {
            "name": "modifiedAt",
            "docs": [
              "Connection approve Unix timestamp (1 + 8)"
            ],
            "type": {
              "option": "i64"
            }
          }
        ]
      }
    },
    {
      "name": "CollectionItem",
      "docs": [
        "CollectionItem account that creates when some Profile collects some Application Entity (e.g. Publication)",
        "",
        "# The CollectionItem account stores:",
        "",
        "1. Application address",
        "2. CollectionItem initializer Profile address",
        "3. CollectionItem target entity (e.g. Publication) address",
        "4. CollectionItem authority address",
        "5. CollectionItem creation unix timestamp",
        "6. Searchable number of 3-day-period",
        "7. Searchable number of day",
        ""
      ],
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "app",
            "docs": [
              "Application Pubkey (32)"
            ],
            "type": "publicKey"
          },
          {
            "name": "initializer",
            "docs": [
              "CollectionItem initializer account Pubkey (32)"
            ],
            "type": "publicKey"
          },
          {
            "name": "target",
            "docs": [
              "CollectionItem target Publication Pubkey (32)"
            ],
            "type": "publicKey"
          },
          {
            "name": "authority",
            "docs": [
              "CollectionItem authority account Pubkey (32)"
            ],
            "type": "publicKey"
          },
          {
            "name": "createdAt",
            "docs": [
              "Unix timestamp of the CollectionItem creation (8)"
            ],
            "type": "i64"
          },
          {
            "name": "searchable3Day",
            "type": "i64"
          },
          {
            "name": "searchableDay",
            "type": "i64"
          }
        ]
      }
    },
    {
      "name": "Alias",
      "docs": [
        "Alias account that creates when new Alias is claimed by user Profile or Subspace",
        "",
        "# The Alias account stores:",
        "",
        "1. Application address",
        "2. Profile which the alias belongs to",
        "3. Alias authority address",
        "4. Alias value",
        ""
      ],
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "app",
            "docs": [
              "Application Pubkey (32)"
            ],
            "type": "publicKey"
          },
          {
            "name": "aliasType",
            "docs": [
              "Alias type (1)"
            ],
            "type": {
              "defined": "AliasType"
            }
          },
          {
            "name": "owner",
            "docs": [
              "Alias owner (Profile or Subspace) Pubkey (32)"
            ],
            "type": "publicKey"
          },
          {
            "name": "authority",
            "docs": [
              "Alias authority account Pubkey (32)"
            ],
            "type": "publicKey"
          },
          {
            "name": "value",
            "docs": [
              "Alias value (STRING_LENGTH_PREFIX + MAX_ALIAS_LENGTH)"
            ],
            "type": "string"
          }
        ]
      }
    },
    {
      "name": "Reaction",
      "docs": [
        "Reaction account that creates when new Publication Reaction initialized",
        "",
        "# The Reaction account stores:",
        "",
        "1. Application address",
        "2. Reaction authority address",
        "3. Reaction Traget type",
        "4. Target Publication address",
        "5. Reaction initializer Profile",
        "6. Reaction type variant",
        "7. Reaction create unix timestamp",
        "8. Searchable number of 3-day-period",
        "9. Searchable number of day",
        ""
      ],
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "app",
            "docs": [
              "Application account Pubkey (32)"
            ],
            "type": "publicKey"
          },
          {
            "name": "authority",
            "docs": [
              "Reaction authority account Pubkey (32)"
            ],
            "type": "publicKey"
          },
          {
            "name": "targetType",
            "docs": [
              "Reaction target type (1)"
            ],
            "type": {
              "defined": "ReactionTargetType"
            }
          },
          {
            "name": "target",
            "docs": [
              "Reaction target Publication Pubkey (32)"
            ],
            "type": "publicKey"
          },
          {
            "name": "initializer",
            "docs": [
              "Reaction initializer Profile Pubkey (32)"
            ],
            "type": "publicKey"
          },
          {
            "name": "reactionType",
            "docs": [
              "Reaction value (1)"
            ],
            "type": {
              "defined": "ReactionType"
            }
          },
          {
            "name": "createdAt",
            "docs": [
              "Unix timestamp of the Reaction creation (8)"
            ],
            "type": "i64"
          },
          {
            "name": "searchable3Day",
            "type": "i64"
          },
          {
            "name": "searchableDay",
            "type": "i64"
          }
        ]
      }
    },
    {
      "name": "Report",
      "docs": [
        "Report account that creates when new Report initialized",
        "",
        "# Report account stores:",
        "",
        "1. Application address",
        "2. Report authority address",
        "3. Report Taget type",
        "4. Report Target address",
        "5. Report initializer Profile",
        "6. Report type variant",
        "7. Searchable number of day",
        "8. Report notification text",
        "9. Report create unix timestamp",
        ""
      ],
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "app",
            "docs": [
              "Application Pubkey (32)"
            ],
            "type": "publicKey"
          },
          {
            "name": "authority",
            "docs": [
              "Alias authority account Pubkey (32)"
            ],
            "type": "publicKey"
          },
          {
            "name": "targetType",
            "docs": [
              "Report target type (1)"
            ],
            "type": {
              "defined": "ReportTargetType"
            }
          },
          {
            "name": "target",
            "docs": [
              "Report target Publication Pubkey (32)"
            ],
            "type": "publicKey"
          },
          {
            "name": "initializer",
            "docs": [
              "Report initializer Pubkey (32)"
            ],
            "type": "publicKey"
          },
          {
            "name": "reportType",
            "docs": [
              "Report type value (1)"
            ],
            "type": {
              "defined": "ReportType"
            }
          },
          {
            "name": "searchableDay",
            "type": "i64"
          },
          {
            "name": "notification",
            "docs": [
              "Report Notification"
            ],
            "type": {
              "option": "string"
            }
          },
          {
            "name": "createdAt",
            "docs": [
              "Unix timestamp of the Report creation (8)"
            ],
            "type": "i64"
          }
        ]
      }
    }
  ],
  "types": [
    {
      "name": "AppData",
      "docs": [
        "## App instruction data struct.",
        "",
        "The struct contains data for the application instruction.",
        "",
        "## Fields:",
        "",
        "- `metadata_uri`: The optional metadata URI for the app.",
        "- `profile_metadata_required`: Specifies whether the Profile metadata required.",
        "- `subspace_metadata_required`: Specifies whether the Subspace metadata required.",
        "- `profile_delete_allowed`: Specifies the permission to delete a Profile.",
        "- `subspace_delete_allowed`: Specifies the permission to delete a Subspace.",
        "- `publication_delete_allowed`: Specifies the permission to delete a Publication.",
        "- `profile_individual_processors_allowed`: Specifies the permission to assign Profile's individual external processors.",
        "- `subspace_individual_processors_allowed`: Specifies the permission to assign Subspace's individual external processors.",
        "- `publication_individual_processors_allowed`: Specifies the permission to assign Publication's individual external processors.",
        ""
      ],
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "metadataUri",
            "docs": [
              "The optional metadata URI for the App."
            ],
            "type": {
              "option": "string"
            }
          },
          {
            "name": "profileMetadataRequired",
            "docs": [
              "Specifies whether the Profile metadata is required."
            ],
            "type": "bool"
          },
          {
            "name": "subspaceMetadataRequired",
            "docs": [
              "Specifies whether the Subspace metadata is required."
            ],
            "type": "bool"
          },
          {
            "name": "profileDeleteAllowed",
            "docs": [
              "Specifies the permission to delete a Profile."
            ],
            "type": "bool"
          },
          {
            "name": "subspaceDeleteAllowed",
            "docs": [
              "Specifies the permission to delete a Subspace."
            ],
            "type": "bool"
          },
          {
            "name": "publicationDeleteAllowed",
            "docs": [
              "Specifies the permission to delete a Publication."
            ],
            "type": "bool"
          },
          {
            "name": "profileIndividualProcessorsAllowed",
            "docs": [
              "Specifies the permission to assign Profile's individual external processors."
            ],
            "type": "bool"
          },
          {
            "name": "subspaceIndividualProcessorsAllowed",
            "docs": [
              "Specifies the permission to assign Subspace's individual external processors."
            ],
            "type": "bool"
          },
          {
            "name": "publicationIndividualProcessorsAllowed",
            "docs": [
              "Specifies the permission to assign Publication's individual external processors."
            ],
            "type": "bool"
          }
        ]
      }
    },
    {
      "name": "ProfileData",
      "docs": [
        "Profile instruction data struct",
        "",
        "# Struct contains:",
        "",
        "1. `alias` - Unique Application's user Profile Alias as string (ASCII alphanumeric)",
        "2. `metadata_uri` - Profile metadata URI",
        "3. `status_text` - Profile status",
        "4. `gender` - Profile gender",
        "5. `first_name` Profile first name",
        "6. `last_name` Profile last name",
        "7. `birth_date` - Profile birth date",
        "8. `country_code` Profile country",
        "9. `region_code` Profile region (region)",
        "10. `city_code` Profile city",
        "11. `current_location` - Profile location coordinates",
        ""
      ],
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "alias",
            "type": {
              "option": "string"
            }
          },
          {
            "name": "metadataUri",
            "type": {
              "option": "string"
            }
          },
          {
            "name": "statusText",
            "type": "string"
          },
          {
            "name": "gender",
            "type": {
              "option": {
                "defined": "Gender"
              }
            }
          },
          {
            "name": "firstName",
            "type": "string"
          },
          {
            "name": "lastName",
            "type": "string"
          },
          {
            "name": "birthDate",
            "type": "i64"
          },
          {
            "name": "countryCode",
            "type": "u16"
          },
          {
            "name": "regionCode",
            "type": "u16"
          },
          {
            "name": "cityCode",
            "type": "u16"
          },
          {
            "name": "currentLocation",
            "type": {
              "option": {
                "defined": "LocationCoordinates"
              }
            }
          }
        ]
      }
    },
    {
      "name": "SubspaceData",
      "docs": [
        "Subspace data struct",
        "",
        "# Struct contains:",
        "",
        "1. `alias` - Unique Application's Subspace Alias as string (ASCII alphanumeric) (optional)",
        "2. `name` - Subspace name",
        "3. `metadata_uri` - Publication metadata URI (optional)",
        ""
      ],
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "alias",
            "type": {
              "option": "string"
            }
          },
          {
            "name": "name",
            "type": "string"
          },
          {
            "name": "publishingPermission",
            "type": {
              "defined": "SubspacePublishingPermissionLevel"
            }
          },
          {
            "name": "metadataUri",
            "type": {
              "option": "string"
            }
          }
        ]
      }
    },
    {
      "name": "PublicationData",
      "docs": [
        "Publication data struct",
        "",
        "# Struct contains:",
        "",
        "1. `is_encrypted` - Whether or not the publication has encrypted content",
        "2. `metadata_uri` - Publication metadata URI",
        "3. `is_mirror` - Whether or not the publication is mirroring other existing publication (e.g. re-post)",
        "4. `is_reply` - Whether or not the publication is replying to other existing publication (e.g. comment)",
        "5. `content_type` - Publication content type",
        "6. `tag` - Publication Tag",
        ""
      ],
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "isEncrypted",
            "type": "bool"
          },
          {
            "name": "metadataUri",
            "type": "string"
          },
          {
            "name": "isMirror",
            "type": "bool"
          },
          {
            "name": "isReply",
            "type": "bool"
          },
          {
            "name": "contentType",
            "type": {
              "defined": "ContentType"
            }
          },
          {
            "name": "tag",
            "type": "string"
          }
        ]
      }
    },
    {
      "name": "ReportData",
      "docs": [
        "Report data struct",
        "",
        "# Struct contains:",
        "",
        "1. `report_type` - Enum with Report variants",
        "2. `notification_string` - Additional Report information",
        ""
      ],
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "reportType",
            "type": {
              "defined": "ReportType"
            }
          },
          {
            "name": "notificationString",
            "type": {
              "option": "string"
            }
          }
        ]
      }
    },
    {
      "name": "LocationCoordinates",
      "docs": [
        "Coordinates",
        "",
        "# Struct contains",
        "",
        "* latitude",
        "* longitude",
        ""
      ],
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "latitude",
            "type": "u64"
          },
          {
            "name": "longitude",
            "type": "u64"
          }
        ]
      }
    },
    {
      "name": "ProcessorType",
      "docs": [
        "External Processor Type",
        "",
        "# Enum variants:",
        "",
        "* Registering",
        "* Connecting",
        "* Publishing",
        "* Collecting",
        "* Referencing",
        ""
      ],
      "type": {
        "kind": "enum",
        "variants": [
          {
            "name": "Registering"
          },
          {
            "name": "Connecting"
          },
          {
            "name": "Publishing"
          },
          {
            "name": "Collecting"
          },
          {
            "name": "Referencing"
          }
        ]
      }
    },
    {
      "name": "AliasType",
      "docs": [
        "Alias type (e.g. Profile or Subspace)",
        "",
        "# Enum variants:",
        "",
        "* Profile",
        "* Subspace",
        ""
      ],
      "type": {
        "kind": "enum",
        "variants": [
          {
            "name": "Profile"
          },
          {
            "name": "Subspace"
          }
        ]
      }
    },
    {
      "name": "ConnectionTargetType",
      "docs": [
        "Connection Target type (e.g. Profile or Subspace)",
        "",
        "# Enum variants:",
        "",
        "* Profile",
        "* Subspace",
        ""
      ],
      "type": {
        "kind": "enum",
        "variants": [
          {
            "name": "Profile"
          },
          {
            "name": "Subspace"
          }
        ]
      }
    },
    {
      "name": "Gender",
      "docs": [
        "Gender type",
        "",
        "# Enum variants:",
        "",
        "1. Male",
        "2. Female",
        "3. Other (or Prefer not to say)",
        ""
      ],
      "type": {
        "kind": "enum",
        "variants": [
          {
            "name": "Male"
          },
          {
            "name": "Female"
          },
          {
            "name": "OtherOrPreferNotToSay"
          }
        ]
      }
    },
    {
      "name": "ContentType",
      "docs": [
        "Content type that publication focus (e.g. short video)",
        "",
        "# Enum variants:",
        "",
        "1. Article - Article type (e.g. - mixed content / blog post)",
        "2. Image file - Image file type",
        "3. Video file - Video file type",
        "4. Short video - Shor video file type",
        "5. Audio file - Audio file type",
        "6. Text only - Text type",
        "7. External link - Link type",
        ""
      ],
      "type": {
        "kind": "enum",
        "variants": [
          {
            "name": "Article"
          },
          {
            "name": "Image"
          },
          {
            "name": "Video"
          },
          {
            "name": "ShortVideo"
          },
          {
            "name": "Audio"
          },
          {
            "name": "Text"
          },
          {
            "name": "Link"
          }
        ]
      }
    },
    {
      "name": "SubspacePublishingPermissionLevel",
      "docs": [
        "Subspace publishing permission level",
        "",
        "# Enum variants:",
        "",
        "* All",
        "* AllMembers",
        "* ApprovedMembers",
        "* Admins",
        "* Owner",
        ""
      ],
      "type": {
        "kind": "enum",
        "variants": [
          {
            "name": "All"
          },
          {
            "name": "AllMembers"
          },
          {
            "name": "ApprovedMembers"
          },
          {
            "name": "Admins"
          },
          {
            "name": "Owner"
          }
        ]
      }
    },
    {
      "name": "ReactionTargetType",
      "docs": [
        "Reaction Target type",
        "",
        "# Enum variants:",
        "",
        "* Profile",
        "* Publication",
        ""
      ],
      "type": {
        "kind": "enum",
        "variants": [
          {
            "name": "Profile"
          },
          {
            "name": "Publication"
          }
        ]
      }
    },
    {
      "name": "ReactionType",
      "docs": [
        "Reaction type (e.g. Like / Dislike)",
        "",
        "# Enum variants:",
        "",
        "* UpVote - (e.g. \"Like\")",
        "* DownVote - (e.g. \"Dislike\")",
        "* CustomVote - custom smile/icon implementation",
        ""
      ],
      "type": {
        "kind": "enum",
        "variants": [
          {
            "name": "UpVote"
          },
          {
            "name": "DownVote"
          },
          {
            "name": "CustomVote"
          }
        ]
      }
    },
    {
      "name": "ReportTargetType",
      "docs": [
        "Report Target type",
        "",
        "# Enum variants:",
        "",
        "* Profile",
        "* Subspace",
        "* Publication",
        ""
      ],
      "type": {
        "kind": "enum",
        "variants": [
          {
            "name": "Profile"
          },
          {
            "name": "Subspace"
          },
          {
            "name": "Publication"
          }
        ]
      }
    },
    {
      "name": "ReportType",
      "docs": [
        "Report type",
        "",
        "# Enum variants:",
        "",
        "* Scam",
        "* Abuse",
        "* Spam",
        "* HateSpeech",
        "* Harassment",
        "* Misinformation",
        "* Violence",
        "* Threats",
        "* Copyright",
        "* Adult",
        ""
      ],
      "type": {
        "kind": "enum",
        "variants": [
          {
            "name": "Scam"
          },
          {
            "name": "Phishing"
          },
          {
            "name": "Abuse"
          },
          {
            "name": "Spam"
          },
          {
            "name": "HateSpeech"
          },
          {
            "name": "Harassment"
          },
          {
            "name": "Misinformation"
          },
          {
            "name": "Violence"
          },
          {
            "name": "Threats"
          },
          {
            "name": "Copyright"
          },
          {
            "name": "Adult"
          }
        ]
      }
    },
    {
      "name": "SubspaceManagementRoleType",
      "docs": [
        "Subspace management Roles",
        "",
        "# Enum variants:",
        "",
        "* Admin",
        "* Publisher",
        ""
      ],
      "type": {
        "kind": "enum",
        "variants": [
          {
            "name": "Publisher"
          },
          {
            "name": "Admin"
          }
        ]
      }
    }
  ],
  "events": [
    {
      "name": "NewDeveloperEvent",
      "fields": [
        {
          "name": "developer",
          "type": "publicKey",
          "index": false
        },
        {
          "name": "createdAt",
          "type": "i64",
          "index": false
        }
      ]
    },
    {
      "name": "DeleteDeveloperEvent",
      "fields": [
        {
          "name": "developer",
          "type": "publicKey",
          "index": false
        },
        {
          "name": "deletedAt",
          "type": "i64",
          "index": false
        }
      ]
    },
    {
      "name": "NewExternalProcessorEvent",
      "fields": [
        {
          "name": "programAddress",
          "type": "publicKey",
          "index": false
        },
        {
          "name": "createdAt",
          "type": "i64",
          "index": false
        }
      ]
    },
    {
      "name": "DeleteExternalProcessorEvent",
      "fields": [
        {
          "name": "programAddress",
          "type": "publicKey",
          "index": false
        },
        {
          "name": "deletedAt",
          "type": "i64",
          "index": false
        }
      ]
    },
    {
      "name": "NewProfileEvent",
      "fields": [
        {
          "name": "app",
          "type": "publicKey",
          "index": false
        },
        {
          "name": "profile",
          "type": "publicKey",
          "index": false
        },
        {
          "name": "createdAt",
          "type": "i64",
          "index": false
        }
      ]
    },
    {
      "name": "UpdateProfileEvent",
      "fields": [
        {
          "name": "app",
          "type": "publicKey",
          "index": false
        },
        {
          "name": "profile",
          "type": "publicKey",
          "index": false
        },
        {
          "name": "modifiedAt",
          "type": "i64",
          "index": false
        }
      ]
    },
    {
      "name": "DeleteProfileEvent",
      "fields": [
        {
          "name": "app",
          "type": "publicKey",
          "index": false
        },
        {
          "name": "profile",
          "type": "publicKey",
          "index": false
        },
        {
          "name": "deletedAt",
          "type": "i64",
          "index": false
        }
      ]
    },
    {
      "name": "NewSubspaceEvent",
      "fields": [
        {
          "name": "app",
          "type": "publicKey",
          "index": false
        },
        {
          "name": "subspace",
          "type": "publicKey",
          "index": false
        },
        {
          "name": "createdAt",
          "type": "i64",
          "index": false
        }
      ]
    },
    {
      "name": "UpdateSubspaceEvent",
      "fields": [
        {
          "name": "app",
          "type": "publicKey",
          "index": false
        },
        {
          "name": "subspace",
          "type": "publicKey",
          "index": false
        },
        {
          "name": "modifiedAt",
          "type": "i64",
          "index": false
        }
      ]
    },
    {
      "name": "DeleteSubspaceEvent",
      "fields": [
        {
          "name": "app",
          "type": "publicKey",
          "index": false
        },
        {
          "name": "subspace",
          "type": "publicKey",
          "index": false
        },
        {
          "name": "deletedAt",
          "type": "i64",
          "index": false
        }
      ]
    },
    {
      "name": "NewSubspaceManagerEvent",
      "fields": [
        {
          "name": "app",
          "type": "publicKey",
          "index": false
        },
        {
          "name": "profile",
          "type": "publicKey",
          "index": false
        },
        {
          "name": "createdAt",
          "type": "i64",
          "index": false
        }
      ]
    },
    {
      "name": "UpdateSubspaceManagerEvent",
      "fields": [
        {
          "name": "app",
          "type": "publicKey",
          "index": false
        },
        {
          "name": "profile",
          "type": "publicKey",
          "index": false
        },
        {
          "name": "modifiedAt",
          "type": "i64",
          "index": false
        }
      ]
    },
    {
      "name": "NewPublicationEvent",
      "fields": [
        {
          "name": "app",
          "type": "publicKey",
          "index": false
        },
        {
          "name": "publication",
          "type": "publicKey",
          "index": false
        },
        {
          "name": "profile",
          "type": "publicKey",
          "index": false
        },
        {
          "name": "createdAt",
          "type": "i64",
          "index": false
        }
      ]
    },
    {
      "name": "UpdatePublicationEvent",
      "fields": [
        {
          "name": "app",
          "type": "publicKey",
          "index": false
        },
        {
          "name": "publication",
          "type": "publicKey",
          "index": false
        },
        {
          "name": "profile",
          "type": "publicKey",
          "index": false
        },
        {
          "name": "modifiedAt",
          "type": "i64",
          "index": false
        }
      ]
    },
    {
      "name": "DeletePublicationEvent",
      "fields": [
        {
          "name": "app",
          "type": "publicKey",
          "index": false
        },
        {
          "name": "publication",
          "type": "publicKey",
          "index": false
        },
        {
          "name": "profile",
          "type": "publicKey",
          "index": false
        },
        {
          "name": "deletedAt",
          "type": "i64",
          "index": false
        }
      ]
    },
    {
      "name": "NewConnectionEvent",
      "fields": [
        {
          "name": "app",
          "type": "publicKey",
          "index": false
        },
        {
          "name": "initializer",
          "type": "publicKey",
          "index": false
        },
        {
          "name": "target",
          "type": "publicKey",
          "index": false
        },
        {
          "name": "createdAt",
          "type": "i64",
          "index": false
        }
      ]
    },
    {
      "name": "UpdateConnectionEvent",
      "fields": [
        {
          "name": "app",
          "type": "publicKey",
          "index": false
        },
        {
          "name": "connection",
          "type": "publicKey",
          "index": false
        },
        {
          "name": "status",
          "type": "bool",
          "index": false
        },
        {
          "name": "modifiedAt",
          "type": "i64",
          "index": false
        }
      ]
    },
    {
      "name": "DeleteConnectionEvent",
      "fields": [
        {
          "name": "app",
          "type": "publicKey",
          "index": false
        },
        {
          "name": "connection",
          "type": "publicKey",
          "index": false
        },
        {
          "name": "deletedAt",
          "type": "i64",
          "index": false
        }
      ]
    },
    {
      "name": "NewReactionEvent",
      "fields": [
        {
          "name": "app",
          "type": "publicKey",
          "index": false
        },
        {
          "name": "target",
          "type": "publicKey",
          "index": false
        },
        {
          "name": "createdAt",
          "type": "i64",
          "index": false
        }
      ]
    },
    {
      "name": "DeleteReactionEvent",
      "fields": [
        {
          "name": "app",
          "type": "publicKey",
          "index": false
        },
        {
          "name": "target",
          "type": "publicKey",
          "index": false
        },
        {
          "name": "deletedAt",
          "type": "i64",
          "index": false
        }
      ]
    },
    {
      "name": "NewReportEvent",
      "fields": [
        {
          "name": "app",
          "type": "publicKey",
          "index": false
        },
        {
          "name": "target",
          "type": "publicKey",
          "index": false
        },
        {
          "name": "createdAt",
          "type": "i64",
          "index": false
        }
      ]
    }
  ],
  "errors": [
    {
      "code": 6000,
      "name": "DeveloperNotAthorized",
      "msg": "Developer not authorized"
    },
    {
      "code": 6001,
      "name": "DeveloperActionNotAthorized",
      "msg": "Developer action not authorized"
    },
    {
      "code": 6002,
      "name": "ProcessorAuthorityMismatch",
      "msg": "Procesor authority mismatch"
    },
    {
      "code": 6003,
      "name": "ProcessorTypeMismatch",
      "msg": "Procesor type mismatch"
    },
    {
      "code": 6004,
      "name": "ProcessorNameLengthIncorrect",
      "msg": "Procesor name length is incorrect"
    },
    {
      "code": 6005,
      "name": "ProcessorNameInvalid",
      "msg": "Processor name must contain only ASCII letters in lower case and numbers"
    },
    {
      "code": 6006,
      "name": "ProcessorNotWhitelisted",
      "msg": "Procesor trying to use is not whitelisted"
    },
    {
      "code": 6007,
      "name": "AppNameLengthIncorrect",
      "msg": "Application name (ID) length is incorrect"
    },
    {
      "code": 6008,
      "name": "AppNameInvalid",
      "msg": "Application name must contain only ASCII letters in lower case and numbers"
    },
    {
      "code": 6009,
      "name": "AppManagementNotAthorized",
      "msg": "App management action not authorized"
    },
    {
      "code": 6010,
      "name": "MissingRequiredField",
      "msg": "Missing field required by Application settings"
    },
    {
      "code": 6011,
      "name": "ActionProhibitedByAppSettings",
      "msg": "The action is prohibited by application settings"
    },
    {
      "code": 6012,
      "name": "AliasLengthIncorrect",
      "msg": "Alias length is incorrect"
    },
    {
      "code": 6013,
      "name": "AliasInvalid",
      "msg": "Alias must contain only ASCII letters in lower case, numbers and underscores"
    },
    {
      "code": 6014,
      "name": "ProfileIncorrect",
      "msg": "Profile incorrect"
    },
    {
      "code": 6015,
      "name": "ProfileAliasIncorrect",
      "msg": "Profile alias is incorrect"
    },
    {
      "code": 6016,
      "name": "AliasAccountRequired",
      "msg": "Alias account required to register action"
    },
    {
      "code": 6017,
      "name": "AliasAccountsMustBeNone",
      "msg": "Alias accounts must not be passed"
    },
    {
      "code": 6018,
      "name": "BothAliasAccountRequired",
      "msg": "Both alias account required to update"
    },
    {
      "code": 6019,
      "name": "CurrentAliasAccountRequired",
      "msg": "Current alias account required to delete"
    },
    {
      "code": 6020,
      "name": "UpdateNotAuthorized",
      "msg": "Profile update not authorized"
    },
    {
      "code": 6021,
      "name": "BirthDateIncorrect",
      "msg": "Profile birth date is incorrect"
    },
    {
      "code": 6022,
      "name": "ProfileFirstNameLengthIncorrect",
      "msg": "Profile first name length is incorrect"
    },
    {
      "code": 6023,
      "name": "ProfileLastNameLengthIncorrect",
      "msg": "Profile last name length is incorrect"
    },
    {
      "code": 6024,
      "name": "SubspaceAliasIncorrect",
      "msg": "Subspace alias is incorrect"
    },
    {
      "code": 6025,
      "name": "SubspaceNameIncorrect",
      "msg": "Subspace name length is incorrect"
    },
    {
      "code": 6026,
      "name": "SubspacePublishingPermissionViolation",
      "msg": "Subspace publishing permission violated"
    },
    {
      "code": 6027,
      "name": "SubspacePublishingConnectionProofAccountRequired",
      "msg": "Subspace publishing Connection-proof account required"
    },
    {
      "code": 6028,
      "name": "SubspacePublishingManagerProofAccountRequired",
      "msg": "Subspace publishing Manager-proof account required"
    },
    {
      "code": 6029,
      "name": "UriLengthIncorrect",
      "msg": "URI length is incorrect"
    },
    {
      "code": 6030,
      "name": "TargetPublicationRequired",
      "msg": "Missed Target Publication account"
    },
    {
      "code": 6031,
      "name": "BothMirrorAndReplyNotAllowed",
      "msg": "Both mirroring and replying not allowed in the same time"
    },
    {
      "code": 6032,
      "name": "SelfConnectionNotAllowed",
      "msg": "Self conections is not allowed"
    },
    {
      "code": 6033,
      "name": "ConnectionTargetAccountMissed",
      "msg": "Connection target account is missed"
    },
    {
      "code": 6034,
      "name": "ConnectionTargetAccountInvalid",
      "msg": "Connection target account is invalid"
    },
    {
      "code": 6035,
      "name": "ConnectionTargetAuthorityMismatch",
      "msg": "Connection target authority mismatch"
    },
    {
      "code": 6036,
      "name": "ConnectionValidationFail",
      "msg": "Connection validation failed"
    },
    {
      "code": 6037,
      "name": "AliasAccountExist",
      "msg": "Alias account already exist"
    },
    {
      "code": 6038,
      "name": "SelfPublicationCollecting",
      "msg": "Forbidden to collect user's  own publication"
    },
    {
      "code": 6039,
      "name": "PublicationTagIncorrect",
      "msg": "Publication Tag is incorrect"
    },
    {
      "code": 6040,
      "name": "RegisteringProcessorAccountMissed",
      "msg": "Missed registering external processor account"
    },
    {
      "code": 6041,
      "name": "ConnectingProcessorAccountMissed",
      "msg": "Missed connecting external processor account"
    },
    {
      "code": 6042,
      "name": "PublishingProcessorAccountMissed",
      "msg": "Missed publishing external processor account"
    },
    {
      "code": 6043,
      "name": "CollectingProcessorAccountMissed",
      "msg": "Missed collecting external processor account"
    },
    {
      "code": 6044,
      "name": "ReferencingProcessorAccountMissed",
      "msg": "Missed referencing external processor account"
    },
    {
      "code": 6045,
      "name": "RegisteringProcessorMismatch",
      "msg": "Registering external processor mismatch"
    },
    {
      "code": 6046,
      "name": "ConnectingProcessorMismatch",
      "msg": "Connecting external processor mismatch"
    },
    {
      "code": 6047,
      "name": "PublishingProcessorMismatch",
      "msg": "Publishing external processor mismatch"
    },
    {
      "code": 6048,
      "name": "CollectingProcessorMismatch",
      "msg": "Collecting external processor mismatch"
    },
    {
      "code": 6049,
      "name": "ReferencingProcessorMismatch",
      "msg": "Referencing external processor mismatch"
    },
    {
      "code": 6050,
      "name": "ReactionTargetAccountInvalid",
      "msg": "Reaction target account is invalid"
    },
    {
      "code": 6051,
      "name": "ReportTargetAccountInvalid",
      "msg": "Report target account is invalid"
    }
  ],
  "metadata": {
    "address": "964vWgVEK9X8ZwZB2HyshFVmHUWbcYpRTnVYz2o3F2Xq",
    "origin": "anchor",
    "binaryVersion": "0.27.0",
    "libVersion": "0.27.0"
  }
}